generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  username         String             @unique @db.VarChar(30)
  password         String             @db.VarChar(72)
  email            String?
  TableReservation TableReservation[]
  Confirm          Confirm[]
  Purchase         Purchase[]

  @@map("users")
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  price       Float
  // Add other fields as needed
  Confirm     Confirm[]
  Purchase    Purchase[]

  @@map("products")
}

model TableReservation {
  id          Int        @id @default(autoincrement())
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  tableNumber Int
  status      Status
  // Add other fields as needed
  Confirm     Confirm[]
  Purchase    Purchase[]

  @@map("table_reservations")
}

model Confirm {
  id                 Int              @id @default(autoincrement())
  username           String
  user               User             @relation(fields: [username], references: [username])
  product            Product          @relation(fields: [productId], references: [id])
  productId          Int
  tableReservation   TableReservation @relation(fields: [tableReservationId], references: [id])
  tableReservationId Int

  @@map("confirms")
}

model Purchase {
  id                 Int              @id @default(autoincrement())
  userId             Int
  user               User             @relation(fields: [userId], references: [id])
  productId          Int
  product            Product          @relation(fields: [productId], references: [id])
  tableReservation   TableReservation @relation(fields: [tableReservationId], references: [id])
  tableReservationId Int
  quantity           Int
  totalPrice         Float

  @@map("purchases")
}

enum Status {
  PENDING
  DOING
  DONE
}
